name: CI Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13] # macos-14 doesn't support virtualization (uses ARM arch)
        jdk-version: [21]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # We can't control the architecture of macOS runners, so we double-check here
      - name: Check architecture for nested virtualization on macOS
        if: runner.os == 'macos'
        shell: bash
        run: |
          if [ $(uname -m) != "x86_64" ] 
          then 
              echo "$(uname -m) detected. This test must be run on x86_64"
              exit -1
          fi
          exit 0

      # Docker is not installed on GitHub's MacOS hosted workers due to licensing issues
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        # colima is not installed in macos-13, so we need this action since macos-12 is deprecated
        uses: douglascamata/setup-docker-macos-action@v1-alpha

      # For testcontainers to find the Colima socket
      # https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
      - name: Map docker.sock to colima (macOS only)
        if: runner.os == 'macos'
        run: |
          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

      - name: Set up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk-version }}

      - name: Cache Kotlin/Native binaries
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: konan-${{ runner.os }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build
